name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # v1.0.0, v1.2.3 Îì±Ïùò Î≤ÑÏ†Ñ ÌÉúÍ∑∏ÏóêÎßå Î∞òÏùë
  workflow_dispatch:  # ÏàòÎèô Ïã§Ìñâ Í∞ÄÎä•

permissions:
  contents: write  # Î¶¥Î¶¨Ïä§ ÏÉùÏÑ±ÏùÑ ÏúÑÌïú Í∂åÌïú

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Build Windows executable
        run: |
          uv run pyinstaller --name KTX-SRT-Macro --onefile --windowed --icon "assets/favicon.ico" --add-data "src;src" --add-data "assets;assets" --noupx main.py

      - name: Rename Windows executable
        run: |
          cd dist
          ren KTX-SRT-Macro.exe KTX-SRT-Macro-Windows.exe

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: KTX-SRT-Macro-Windows
          path: dist/KTX-SRT-Macro-Windows.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Build macOS app
        run: |
          uv run pyinstaller --name KTX-SRT-Macro --windowed --icon "assets/favicon.icns" --add-data "src:src" --add-data "assets:assets" main.py

      - name: Create macOS zip
        run: |
          cd dist
          zip -r KTX-SRT-Macro-macOS.zip KTX-SRT-Macro.app

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: KTX-SRT-Macro-macOS
          path: dist/KTX-SRT-Macro-macOS.zip

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ï†ÑÏ≤¥ ÌûàÏä§ÌÜ†Î¶¨ Í∞ÄÏ†∏Ïò§Í∏∞ (changelog ÏÉùÏÑ±Ïö©)

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: KTX-SRT-Macro-Windows
          path: ./artifacts/windows

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: KTX-SRT-Macro-macOS
          path: ./artifacts/macos

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Ïù¥Ï†Ñ ÌÉúÍ∑∏ Ï∞æÍ∏∞
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          # Î¶¥Î¶¨Ïä§ ÎÖ∏Ìä∏ ÏÉùÏÑ±
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## üéâ Ï≤´ Î≤àÏß∏ Î¶¥Î¶¨Ïä§" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "### ‚ú® Ï£ºÏöî Í∏∞Îä•" >> $GITHUB_OUTPUT
            echo "- KTX/SRT ÏûêÎèô ÏòàÏïΩ" >> $GITHUB_OUTPUT
            echo "- ÌîåÎû´ÌèºÎ≥Ñ Î≥¥Ïïà Ï†ÄÏû•ÏÜå ÏßÄÏõê (Keychain, Credential Locker)" >> $GITHUB_OUTPUT
            echo "- ÏûêÎèô Í≤∞Ï†ú Í∏∞Îä•" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "### üì• Îã§Ïö¥Î°úÎìú" >> $GITHUB_OUTPUT
            echo "- **Windows**: \`KTX-SRT-Macro-Windows.exe\` Îã§Ïö¥Î°úÎìú ÌõÑ Ïã§Ìñâ" >> $GITHUB_OUTPUT
            echo "- **macOS**: \`KTX-SRT-Macro-macOS.zip\` Îã§Ïö¥Î°úÎìú ÌõÑ ÏïïÏ∂ï Ìï¥Ï†úÌïòÏó¨ \`KTX-SRT-Macro.app\` Ïã§Ìñâ" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "### üìù Î≥ÄÍ≤Ω ÏÇ¨Ìï≠" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s (%h)" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## üì¶ Î¶¥Î¶¨Ïä§ ÎÖ∏Ìä∏" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "### üì• Îã§Ïö¥Î°úÎìú" >> $GITHUB_OUTPUT
            echo "- **Windows**: \`KTX-SRT-Macro-Windows.exe\` Îã§Ïö¥Î°úÎìú ÌõÑ Ïã§Ìñâ" >> $GITHUB_OUTPUT
            echo "- **macOS**: \`KTX-SRT-Macro-macOS.zip\` Îã§Ïö¥Î°úÎìú ÌõÑ ÏïïÏ∂ï Ìï¥Ï†ú" >> $GITHUB_OUTPUT
            echo "  - \`KTX-SRT-Macro.app\`ÏùÑ Applications Ìè¥ÎçîÎ°ú Ïù¥Îèô (ÏÑ†ÌÉùÏÇ¨Ìï≠)" >> $GITHUB_OUTPUT
            echo "  - Ï≤òÏùå Ïã§Ìñâ Ïãú ÏãúÏä§ÌÖú ÌôòÍ≤ΩÏÑ§Ï†ï > Î≥¥Ïïà Î∞è Í∞úÏù∏Ï†ïÎ≥¥ Î≥¥Ìò∏ÏóêÏÑú Ïã§Ìñâ ÌóàÏö© ÌïÑÏöî" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "### üìù Î≥ÄÍ≤Ω ÏÇ¨Ìï≠ (\`$PREVIOUS_TAG\` Ïù¥ÌõÑ)" >> $GITHUB_OUTPUT
            git log $PREVIOUS_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "### üë• Í∏∞Ïó¨Ïûê" >> $GITHUB_OUTPUT
            git log $PREVIOUS_TAG..HEAD --pretty=format:"- @%an" --no-merges | sort -u >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false
          files: |
            ./artifacts/windows/KTX-SRT-Macro-Windows.exe
            ./artifacts/macos/KTX-SRT-Macro-macOS.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
